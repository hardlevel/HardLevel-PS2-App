name: .NET Build

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    permissions:
      contents: write  # Permite que o bot de ações crie tags

    env:
      Solution_Name: HardLevel PS2 App.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet packages
      run: msbuild "$env:Solution_Name" /t:Restore /p:Configuration=Release

    - name: Build solution
      run: msbuild "$env:Solution_Name" /p:Configuration=Release

    - name: Set version as current date
      run: echo "VERSION=$(date +'%Y%m%d')" >> $GITHUB_ENV

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build
        path: |
          **\bin\Release\

    # - name: Create and push tag
    #   run: |
    #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
    #     git config --global user.name "github-actions[bot]"
    #     git tag ${{ env.VERSION }}
    #     git push origin ${{ env.VERSION }}

    # - name: Create release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     tag_name: ${{ env.VERSION }}
    #     name: Release ${{ env.VERSION }}
    #     body: 'Automated release generated from GitHub Actions.'
    #     draft: false
    #     prerelease: false
    #     token: ${{ secrets.GITHUB_TOKEN }}

    # - name: Upload release asset
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: Release.zip
    #     asset_name: Release-${{ env.VERSION }}.zip
    #     asset_content_type: application/zip
