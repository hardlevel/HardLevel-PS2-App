name: .NET Build and Release

on:
  push:
    branches: [ "master" ]

jobs:
  build-and-release:
    runs-on: windows-latest

    permissions:
      contents: write  # Permite criar tags e releases

    env:
      Solution_Name: HardLevel PS2 App.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet packages
      run: msbuild "$env:Solution_Name" /t:Restore /p:Configuration=Release

    - name: Build solution
      run: msbuild "$env:Solution_Name" /p:Configuration=Release

    - name: Set version based on current date and time
      run: echo "VERSION=$(Get-Date -Format 'yyyyMMddTHHmmss')" >> $env:GITHUB_ENV

    - name: Compress build into zip
      run: |
        # Verifica se a pasta bin\Release existe
        if (Test-Path "bin\Release") {
            Compress-Archive -Path "bin\\Release\\*" -DestinationPath "Release.zip"
        } else {
            Write-Host "Pasta bin\\Release não encontrada. Verifique se a compilação foi realizada corretamente."
            exit 1
        }
  
    - name: List files (debugging step)
      run: dir # Lista os arquivos no diretório atual para garantir que o Release.zip existe

    - name: Configure Git
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

    - name: Create and push tag
      run: |
        git tag $env:VERSION
        git push origin $env:VERSION

    - name: Create GitHub Release and Upload Asset
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.VERSION }}
        name: Release ${{ env.VERSION }}
        body: 'Automated release generated from GitHub Actions.'
        files: Release.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
